FROM ubuntu:16.04
# FROM https://www.phusionpassenger.com/library/walkthroughs/deploy/ruby/ownserver/apache/oss/xenial/deploy_app.html
ENV workdir /var/www

# Production OSM setup
ENV RAILS_ENV=production

RUN apt-get update

RUN apt-get install -y wget

RUN wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add -

RUN sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'

RUN apt-get update

# Install the openstreetmap-website dependencies and passenger dependencies
RUN apt-get install -y ruby2.3 libruby2.3 ruby2.3-dev \
                     libmagickwand-dev libxml2-dev libxslt1-dev nodejs \
                     apache2 apache2-dev build-essential git-core \
                     postgresql postgresql-contrib libpq-dev \
                     libsasl2-dev imagemagick libffi-dev \
                     nano sudo git

RUN gem2.3 install bundler

# Install our PGP key and add HTTPS support for APT
RUN apt-get install -y dirmngr gnupg
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7
RUN apt-get install -y apt-transport-https ca-certificates

# Add our APT repository
RUN sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger xenial main > /etc/apt/sources.list.d/passenger.list'
RUN apt-get update

# Install Passenger + Apache module
RUN apt-get install -y libapache2-mod-passenger

# Enable the Passenger Apache module and restart Apache
RUN echo "ServerName $(cat /etc/hostname)" >> /etc/apache2/apache2.conf
RUN a2enmod passenger
RUN apache2ctl restart

# Check installation
RUN /usr/bin/passenger-config validate-install
RUN /usr/sbin/passenger-memory-stats

# Create a user for the app
# RUN adduser osmwebsite
# RUN mkdir -p $workdir
# RUN chown osmwebsite: $workdir

# Clone the openstreetmap-website
RUN mkdir $workdir
RUN git clone https://github.com/openstreetmap/openstreetmap-website.git $workdir
WORKDIR $workdir
RUN git checkout master

# Login as the app's user
RUN sudo -u osmwebsite -H bash -l
# Install app dependencies
RUN bundle update listen && bundle install

#  Configure database.yml, application.yml
ADD config/database.yml $workdir/config/database.yml
ADD config/application.yml $workdir/config/application.yml

# Protect sensitive information
RUN chmod 600 $workdir/config/database.yml $workdir/config/application.yml

RUN bundle exec rake assets:precompile
# # RUN passenger-config about ruby-command # check the version  and path for Ruby
# Add Apache configuration file
# ADD config/production.conf /etc/apache2/sites-available/production.conf
# RUN a2ensite production

# Enable required apache modules for the cgimap Apache service
RUN a2enmod proxy proxy_http rewrite

ADD config/cgimap.conf /tmp/
RUN sed -e 's/RewriteRule ^(.*)/#RewriteRule ^(.*)/' \
        -e 's/\/var\/www/\/var\/www\/public/g' \
        /tmp/cgimap.conf > /etc/apache2/sites-available/cgimap.conf
RUN chmod 644 /etc/apache2/sites-available/cgimap.conf

# ADD config/cgimap.conf /etc/apache2/sites-available/cgimap.conf
# RUN chmod 644 /etc/apache2/sites-available/cgimap.conf
# RUN chown root:root /etc/apache2/sites-available/cgimap.conf
RUN a2ensite cgimap
RUN service apache2 restart

# RUN bundle exec rake secret

# RUN apache2ctl configtest

# RUN chown -R www-data: /var/www

CMD bundle exec rails db:migrate && apachectl -k start -DFOREGROUND

