{{- if .Values.db.enabled -}}
{{- if .Values.persistence.enabled -}}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Release.Name }}-pv
  labels:
    app: {{ template "osm-seed.name" . }}
    component: db-pd
    environment: {{ .Values.environment }}
    release: {{ .Release.Name }}
spec:
  storageClassName: "" # It's necessary to specify "" as the storageClassName ,so that the default storage class won't be used, see : https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
  {{- if eq .Values.cloudProvider "aws" }}
  capacity:
    storage: {{ .Values.AWS_ElasticBlockStore_size }}
  accessModes:
    - ReadWriteOnce
  awsElasticBlockStore:
    volumeID: {{ .Values.AWS_ElasticBlockStore_volumeID }}
    fsType: ext4
  {{- end }}
  {{- if eq .Values.cloudProvider "gcp" }}
  capacity:
    storage: {{ .Values.GCP_gcePersistentDisk_size }}
  accessModes:
    - ReadWriteOnce
  gcePersistentDisk:
    pdName: {{ .Values.GCP_gcePersistentDisk_pdName}}
    fsType: ext4
  {{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-pv-claim
  labels:
    app: {{ template "osm-seed.name" . }}
    component: db-pd
    environment: {{ .Values.environment }}
    release: {{ .Release.Name }}
spec:
  storageClassName: ""
  volumeName: {{ .Release.Name }}-pv
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      {{- if eq .Values.cloudProvider "aws" }}
      storage: {{ .Values.AWS_ElasticBlockStore_size }}
      {{- end }}
      {{- if eq .Values.cloudProvider "gcp" }}
      storage: {{ .Values.GCP_gcePersistentDisk_size }}
      {{- end }}
{{- end }}
{{- end }}