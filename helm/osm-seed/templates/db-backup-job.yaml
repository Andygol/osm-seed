{{- if .Values.dbbackup.enabled -}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-db-backup-job
  labels:
    app: {{ template "osm-seed.name" . }}
    component: db-backup-job
    environment: {{ .Values.environment }}
    release: {{ .Release.Name }}
spec:
  schedule: {{ quote .Values.dbbackup.schedule }}
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: {{ .Release.Name }}-db-backup-job
            image: {{ .Values.dbbackup.image }}:{{ .Values.osmSeedVersion }}
            command: ['./start.sh']
            {{- if .Values.dbbackup.resources.enabled -}}
            resources:
              requests:
                memory: {{ .Values.dbbackup.resources.requests.memory }}
                cpu: {{ .Values.dbbackup.resources.requests.cpu }}
              limits:
                memory: {{ .Values.dbbackup.resources.limits.memory }}
                cpu: {{ .Values.dbbackup.resources.limits.cpu }}
            {{- end }}
            env:
              - name: POSTGRES_HOST
                value: {{ .Release.Name }}-db
              - name: POSTGRES_DB
                value: {{ .Values.db.env.POSTGRES_DB }}
              - name: POSTGRES_PASSWORD
                value: {{ quote .Values.db.env.POSTGRES_PASSWORD }}
              - name: POSTGRES_USER
                value: {{ .Values.db.env.POSTGRES_USER }}
              - name: DB_ACTION
                value: {{ .Values.dbbackup.env.DB_ACTION }}
              - name: CLEAN_BACKUPS
                value: {{ quote .Values.dbbackup.env.CLEAN_BACKUPS }}
              # In case cloudProvider=aws
              {{- if eq .Values.cloudProvider "aws" }}
              - name: STORAGE
                value: S3
              - name: AWS_DEFAULT_REGION
                value: {{ .Values.AWS_DEFAULT_REGION }}
              - name: S3_OSM_PATH
                value: {{ .Values.AWS_S3_BUCKET }}
              {{- end }}
              # In case cloudProvider=gcp
              {{- if eq .Values.cloudProvider "gcp" }}
              - name: STORAGE
                value: GS
              - name: GCLOUD_PROJECT
                value: {{ .Values.GCP_GCLOUD_PROJECT }}
              - name: GCLOUD_SERVICE_KEY
                value: {{ .Values.GCP_GCLOUD_SERVICE_KEY }}
              - name: GS_OSM_PATH
                value: {{ .Values.GCP_GS_OSM_PATH }}
              {{- end }}
          restartPolicy: OnFailure
{{- end }}